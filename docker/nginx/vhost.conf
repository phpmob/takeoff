upstream php {
    server php:9000 fail_timeout=0;
}

map $http_upgrade $connection_upgrade {
    default Upgrade;
    '' close;
}

map $http_x_forwarded_proto $fastcgi_https {
    default $https;
    http '';
    https on;
}

server {
    listen 80 default_server;
    server_name default;

    root /var/www/html/current/public;

    if ($host != $server_name) {
        #return 444;
    }

    #location /socket.io {
    #    proxy_pass http://node:80;
    #    proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection $connection_upgrade;
    #    proxy_set_header Host $host;
    #}

    location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
    }

    include fastcgi.conf;

    location ~ ^/index\.php(/|$) {
        fastcgi_pass php;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param HTTPS on;
        fastcgi_param REMOTE_ADDR $http_x_forwarded_for;

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;

        track_uploads uploads 60s;
    }

    location \.php(/|$) {
        return 404;
    }

    include defaults.conf;
}
